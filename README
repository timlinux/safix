What is this?

This is a simple application to repair the internal metadata for 
Tiff files provided by the Directorate of Geospatial Information, 
South Africa. Some of the data provided by them is stored 
in Tiff with 12bit JPEG compression but incorrectly reports 
that is is using 16bit compression in its metadata.

Running this program on such a file will correct that error.



Who wrote this?
==============================================

This Program was kindly created by Frank Warmerdam. Here are the 
original notes he provided along with it:

"I poked around a bit but libtiff is a pretty fragile environment to
modify with hacks for particular bad data products.

However, I have come up with a small C program using libtiff that can
fix up one of your TIFF files labelled as 16bit when it is really 12bit.
I have attached it.  No exactly rocket science!

It should likely be used with a fairly recent version of libtiff like:

 http://download.osgeo.org/libtiff/tiff-4.0.0beta7.zip

Older system libtiff are likely to lack some important fixes related
to updating TIFF files in place - generally not a strength of libtiff.

The program will fix the file in place and then it should work with any
recent GDAL based application using the built-in libtiff/libjpeg libraries
as this will turn on 12bit support by default.

A command something like the following should be enough to build it.

 gcc -Ibld/include safix.c -o safix -Lbld/lib -ltiff

then just run it, one file at a time, on problem files to fix them.

The "fix" may very well break them for some other applications who
expect the problem behavior so be cautious about doing this to the original."


Compilation - Linux:
================================================


Compilation - Windows:
================================================

Download LibJpeg:

http://sourceforge.net/projects/libjpeg/files/libjpeg/6b/jpegsr6.zip/download

Download Libtiff:

http://download.osgeo.org/libtiff/tiff-4.0.0beta7.zip


Unzip both archives. I used c:\dev\cpp as my base working directory and 
all commands that follow will assume that - you need to amend them 
as appropriate for your system.

Now also check out the safix code (you may already have it if you 
are reading this). If you are a git user:

git clone git://github.com/timlinux/safix.git

Or just grab the latest build:

https://github.com/timlinux/safix/zipball/master

Compile libjpeg:
----------------

In the jpeg extracted dir do:

cp jconfig.vc jconfig.h
nmake /f makefile.vc

Compile libtiff:
----------------
In the libtiff directory do:

cd tiff-4.0.0beta7

Edit nmake.opt and set the following options (to enable jpeg and zlip support):



#
# Uncomment and edit following lines to enable JPEG support.
#
JPEG_SUPPORT	= 1
JPEGDIR 	= C:\dev\cpp\jpeg-6b
JPEG_INCLUDE	= -I$(JPEGDIR)
JPEG_LIB 	= $(JPEGDIR)/libjpeg.lib

#
# Uncomment and edit following lines to enable ZIP support
# (required for Deflate compression and Pixar log-format)
#
ZIP_SUPPORT	= 1
ZLIBDIR 	= C:/dev/cpp/zlib125-dll
ZLIB_INCLUDE	= -I$(ZLIBDIR)/include
ZLIB_LIB 	= $(ZLIBDIR)/lib/zdll.lib


nmake /f makefile.vc


Compile SAFIX:
-------------------

Make a build directory in the source tree
Run cmake-gui
Set the source dir to C:\dev\cpp\safix
Set the build dir to C:\dev\cpp\safix\build
Press configure

Toggle advanced view on
Set the following options:

TIFF_INCLUDE_DIR C:\dev\cpp\tiff-4.0.0beta7\libtiff
TIFF_LIBRARY C:\dev\cpp\tiff-4.0.0beta7\libtiff


Then configure, generate and open the created build/<project name>.sln file 
in MSVC Express.

Now compile. You should have a safix.exe executable when done.

===================================================================

Tim Sutton, September 2011
